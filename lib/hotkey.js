(()=>{"use strict";var e={d:(t,n)=>{for(var r in n)e.o(n,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:n[r]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{default:()=>r});const n=require("react"),r=function(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],r=arguments.length>2?arguments[2]:void 0;if(!e)throw new Error("The first parameter to `useHotkey` must contain atleast one `KeyboardEvent.key` string.");if(!r||"function"!=typeof r)throw new Error("The second parameter to `useHotkey` must be a function that will be envoked when the keys are pressed.");var o=e.split("+"),i=[],u=function(e){return!i.includes(e.key)&&(i.push(e.key),i.length>o.length?(i=[],!1):(t&&i.length<o.length&&i.length>1&&JSON.stringify(o.slice(0,i.length))===JSON.stringify(i)&&e.preventDefault(),void(JSON.stringify(o)===JSON.stringify(i)&&(t&&e.preventDefault(),r()))))},s=function(e){var t=i.indexOf(e.key);t>-1&&i.splice(t,1)};return(0,n.useEffect)((function(){return window.addEventListener("keydown",u),function(){window.removeEventListener("keydown",u)}})),(0,n.useEffect)((function(){return window.addEventListener("keyup",s),function(){window.removeEventListener("keyup",s)}})),null};module.exports=t})();